name: Maven release

on:
  push:
    branches: master
    #push:
    #tags:
    #  - v[0-9].[0-9]+.[0-9]+

jobs:
  create-staging:
    runs-on: ubuntu-18.04
    outputs:
      version: ${{ steps.version.outputs.version }}
      staging-repo-id: ${{ steps.open-staging.outputs.staging-repo-id }}
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
      - name: Extract version
        id: version
        run: |
          mvn_version=$(grep -oP '<revision>\K([^<]*)' pom.xml | head -1)
          echo "::set-output name=version::$mvn_version"
      - name: Add Maven credentials
        run: |
          echo '<settings>
                  `<servers>
                      <server>
                          <id>ossrh</id>
                          <username>${{ secrets.nexus_username }}</username>
                          <password>${{ secrets.nexus_password }}</password>
                      </server>
                  </servers>`
                </settings>' > ~/.m2/settings.xml

      - name: Create staging repository
        id: open-staging
        run: |
          version=${{ steps.version.outputs.version }}
          if [[ $version == *"-SNAPSHOT" ]]; then
            nexus_staging_repo=""
            echo "Snapshot version"
          else
            mvn nexus-staging:rc-list
            nexus_staging_repo=$(mvn nexus-staging:rc-open | grep -oP 'com\w+-\d+')
            if [[ -z $nexus_staging_repo ]]; then
              echo "Nexus staging repo is not defined"
              exit 1
            fi
            echo "Staging repository: $nexus_staging_repo"
          fi
          echo "::set-output name=staging-repo-id::$nexus_staging_repo"

  build-macos:
    needs: create-staging
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
      - name: Run native compilation
        run: |
          git submodule init
          git submodule update
          brew install automake libtool pkg-config cmake
          ./bin/build_leveldb.sh clean
      - name: Release Maven package
        uses: samuelmeuli/action-maven-publish@v1.4.0
        with:
          maven_args: -pl leveldb-jna-native -DstagingRepositoryId=${{needs.create-staging.outputs.staging-repo-id}}
          gpg_private_key: ${{ secrets.gpg_private_key }}
          gpg_passphrase: ${{ secrets.gpg_passphrase }}
          nexus_username: ${{ secrets.nexus_username }}
          nexus_password: ${{ secrets.nexus_password }}
  build-windows:
    needs: create-staging
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
      - uses: numworks/setup-msys2@v1
      - name: Run native compilation
        run: |
          git submodule init
          git submodule update
          set MSYSTEM=MINGW64
          msys2do pacman -S --noconfirm base-devel git mingw-w64-x86_64-cmake mingw-w64-x86_64-toolchain
          msys2do bin/build_leveldb.sh clean
      - name: Release Maven package
        uses: samuelmeuli/action-maven-publish@v1.4.0
        with:
          maven_args: -pl leveldb-jna-native -DstagingRepositoryId=${{needs.create-staging.outputs.staging-repo-id}}
          gpg_private_key: ${{ secrets.gpg_private_key }}
          gpg_passphrase: ${{ secrets.gpg_passphrase }}
          nexus_username: ${{ secrets.nexus_username }}
          nexus_password: ${{ secrets.nexus_password }}
  build-linux:
    needs: [create-staging, build-macos, build-windows]
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
      - name: Install prerequisites
        run: |
          git submodule init
          git submodule update
          sudo apt install -y build-essential automake libtool pkg-config gcc-aarch64-linux-gnu g++-aarch64-linux-gnu
      - name: Run aarch64 compilation
        run: |
          CUSTOM_ARCH=aarch64 ./bin/build_leveldb.sh clean
      - name: Release aarch64 package
        uses: samuelmeuli/action-maven-publish@v1.4.0
        with:
          maven_args: -pl leveldb-jna-native -Dplatform.classifier=linux64-aarch64 -DstagingRepositoryId=${{needs.create-staging.outputs.staging-repo-id}}
          gpg_private_key: ${{ secrets.gpg_private_key }}
          gpg_passphrase: ${{ secrets.gpg_passphrase }}
          nexus_username: ${{ secrets.nexus_username }}
          nexus_password: ${{ secrets.nexus_password }}
      - name: Run native compilation
        run: |
          ./bin/build_leveldb.sh clean
      - name: Release native package
        uses: samuelmeuli/action-maven-publish@v1.4.0
        with:
          maven_goals_phases: clean install deploy
          maven_args: -pl leveldb-jna-native -DstagingRepositoryId=${{needs.create-staging.outputs.staging-repo-id}}
          gpg_private_key: ${{ secrets.gpg_private_key }}
          gpg_passphrase: ${{ secrets.gpg_passphrase }}
          nexus_username: ${{ secrets.nexus_username }}
          nexus_password: ${{ secrets.nexus_password }}
      - name: Add Maven credentials
        run: |
          echo '<settings>
                  `<servers>
                      <server>
                          <id>ossrh</id>
                          <username>${{ secrets.nexus_username }}</username>
                          <password>${{ secrets.nexus_password }}</password>
                      </server>
                  </servers>`
                </settings>' > ~/.m2/settings.xml

          echo '${{ secrets.gpg_private_key }}' > ~/gpgkey.asc && \
            echo ${{ secrets.gpg_passphrase }} | gpg --import --batch --yes --passphrase-fd 0 ~/gpgkey.asc && \
            rm ~/gpgkey.asc
      - name: Release core package
        run: |
          nexus_staging_repo="${{ needs.create-staging.outputs.staging-repo-id }}"
          mvn clean test deploy -pl leveldb-jna-core -DstagingRepositoryId=$nexus_staging_repo
          if [[ -n $nexus_staging_repo ]]; then
            mvn nexus-staging:close nexus-staging:release -DstagingRepositoryId=$nexus_staging_repo
          fi
